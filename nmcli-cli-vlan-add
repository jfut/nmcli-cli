#!/bin/bash
#
# nmcli-cli-vlan-add
#
# Copyright (c) 2019 Jun Futagawa (jfut)
#
# This software is released under the MIT License.
# http://opensource.org/licenses/mit-license.php

ECHO_OR_EXECUTE="echo"

echo_or_execute() {
    if [[ -z "${ECHO_OR_EXECUTE}" ]]; then
        echo "Applying: ${@}"
        eval ${@}
    else
        ${ECHO_OR_EXECUTE} ${@}
    fi
}

usage() {
    cat << _EOF_
Usage:

    $0 [-n] [-x] VLAN_IF_NAME VLAN_ID IF_NAME

    Options:
        -n No interface check (Default: check interface)
        -x Run command (Default: echo only)

    Examples:
        $0 eno1.100 100 eno1
        $0 vlan.100 100 bond1

_EOF_
}

check() {
    local VLAN_IF_NAME=${1:-}
    local IF_NAME=${3:-}

    # Check new vlan interface
    nmcli connection show "${VLAN_IF_NAME}" > /dev/null 2>&1
    RET=$?
    if [[ ${RET} -eq 0 ]]; then
        echo "Error: Target vlan interface \"${VLAN_IF_NAME}\" already exists."
        exit 1
    fi

    # Check interface
    nmcli connection show "${IF_NAME}" > /dev/null 2>&1
    RET=$?
    if [[ ${RET} -ne 0 ]]; then
        echo "Error: Target interface \"${IF_NAME}\" not found."
        exit 1
    fi
}

vlan_add() {
    local VLAN_IF_NAME=${1:-}
    local VLAN_ID=${2:-}
    local IF_NAME=${3:-}

    # Add vlan interface
    echo_or_execute nmcli connection add type vlan ipv4.method disabled ipv6.method ignore \
        con-name \"${VLAN_IF_NAME}\" ifname \"${VLAN_IF_NAME}\" dev \"${IF_NAME}\" \
        id ${VLAN_ID}

    cat << _EOF_

# Next steps:
# -> Check vlan status
#    cat /proc/net/vlan/${VLAN_IF_NAME}
#
# -> Set IP address
#    nmcli-cli-ipv4 "${VLAN_IF_NAME}" ...
#    nmcli-cli-ipv6 "${VLAN_IF_NAME}" ...
#
# -> Create a bridge interface:
#    nmcli-cli-bridge-add br1 "${VLAN_IF_NAME}"
_EOF_
}

# Main
main() {
    local NO_CHECK="no"
    while getopts nxh OPT; do
        case "${OPT}" in
            "n" )
                NO_CHECK="yes" ;;
            "x" )
                ECHO_OR_EXECUTE="" ;;
            "h" )
                usage
                exit 0
                ;;
            * )
                usage
                exit 1
                ;;
        esac
    done
    shift $((OPTIND - 1))

    [[ $# -lt 3 ]] && usage && exit 1

    if [[ "${NO_CHECK}" = "no" ]]; then
        check "${@}"
    fi

    if [[ "${ECHO_OR_EXECUTE}" = "echo" ]]; then
        echo "# ${ECHO_OR_EXECUTE} only."
    fi

    vlan_add "${@}"
}

[[ ${#BASH_SOURCE[@]} = 1 ]] && main "${@}"

